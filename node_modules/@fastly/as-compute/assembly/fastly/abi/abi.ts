// Copyright 2020 Fastly, Inc.

// Aliases to be more explicit
export type FastlyStatus = i32;
export type BodyHandle = u32;
export type BodyWriteEnd = u32;
export type RequestHandle = u32;
export type PendingRequestHandle = u32;
export type ResponseHandle = u32;
export type DictionaryHandle = u32;
export type ptr = usize;
export type strptr = ArrayBuffer; // *const u8

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_body", "append")
export declare function fastly_http_body_append(
  dst_handle: BodyHandle,
  src_handle: BodyHandle
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_body", "new")
export declare function fastly_http_body_new(
  handle_out: ptr // *mut BodyHandle
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_body", "read")
export declare function fastly_http_body_read(
  body_handle: BodyHandle,
  buf: ptr,
  buf_len: usize,
  nread_out: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_body", "write")
export declare function fastly_http_body_write(
  body_handle: BodyHandle,
  buf: strptr,
  buf_len: usize,
  end: BodyWriteEnd,
  nwritten_out: ptr // *mut usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_body", "close")
export declare function fastly_http_body_close(
  body_handle: BodyHandle
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_abi", "init")
export declare function fastly_abi_init(abi_version: u64): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_log", "endpoint_get")
export declare function fastly_log_endpoint_get(
  name: strptr,
  name_len: usize,
  endpoint_handle_out: ptr // *mut u32,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_log", "write")
export declare function fastly_log_write(
  endpoint_handle: u32,
  msg: strptr, // *const u8,
  msg_len: usize,
  nwritten_out: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "pending_req_poll")
export declare function fastly_http_req_pending_req_poll(
  pending_req_handle: PendingRequestHandle,
  is_done_out: ptr, // *mut i32,
  resp_handle_out: ptr, // *mut ResponseHandle,
  resp_body_handle_out: ptr // *mut BodyHandle,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "pending_req_select")
export declare function fastly_http_req_pending_req_select(
  pending_req_handles: strptr, // *const PendingRequestHandle,
  pending_req_handles_len: usize,
  done_index_out: ptr, // *mut i32,
  resp_handle_out: ptr, // *mut ResponseHandle,
  resp_body_handle_out: ptr // *mut BodyHandle,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "pending_req_wait")
export declare function fastly_http_req_pending_req_wait(
  pending_req_handle: PendingRequestHandle,
  resp_handle_out: ptr, // *mut ResponseHandle,
  resp_body_handle_out: ptr // *mut BodyHandle,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "body_downstream_get")
export declare function fastly_http_req_body_downstream_get(
  req_handle_out: ptr, // *mut RequestHandle,
  body_handle_out: ptr // *mut BodyHandle,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "cache_override_set")
export declare function fastly_http_req_cache_override_set(
  req_handle: RequestHandle,
  tag: u32,
  ttl: u32,
  swr: u32
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "downstream_client_ip_addr")
export declare function fastly_http_req_downstream_client_ip_addr(
  addr_octets_out: strptr, //*mut u8,
  nwritten_out: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "downstream_tls_cipher_openssl_name")
export declare function fastly_http_req_downstream_tls_cipher_openssl_name(
  cipher_out: strptr, // *mut u8,
  cipher_max_len: usize,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "downstream_tls_protocol")
export declare function fastly_http_req_downstream_tls_protocol(
  cipher_out: strptr, // *mut u8,
  cipher_max_len: usize,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "header_append")
export declare function fastly_http_req_header_append(
  req_handle: RequestHandle,
  name: strptr, // *const u8,
  name_len: usize,
  value: strptr, // *const u8,
  value_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "header_insert")
export declare function fastly_http_req_header_insert(
  req_handle: RequestHandle,
  name: strptr, // *const u8,
  name_len: usize,
  value: strptr, //*const u8,
  value_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "header_names_get")
export declare function fastly_http_req_header_names_get(
  req_handle: RequestHandle,
  buf: strptr, // *mut u8,
  buf_len: usize,
  cursor: u32,
  ending_cursor: ptr, // *mut i64,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "header_values_get")
export declare function fastly_http_req_header_values_get(
  req_handle: RequestHandle,
  name: strptr, // *const u8,
  name_len: usize,
  buf: strptr, // *mut u8,
  buf_len: usize,
  cursor: u32,
  ending_cursor: ptr, // *mut i64,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "header_values_set")
export declare function fastly_http_req_header_values_set(
  req_handle: RequestHandle,
  name: strptr, // *const u8,
  name_len: usize,
  values: strptr, //*const u8,
  values_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "method_get")
export declare function fastly_http_req_method_get(
  req_handle: RequestHandle,
  method: strptr, // *mut u8,
  method_max_len: usize,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "method_set")
export declare function fastly_http_req_method_set(
  req_handle: RequestHandle,
  method: strptr, // *const u8,
  method_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "new")
export declare function fastly_http_req_new(
  req_handle_out: ptr // *mut RequestHandle
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "send")
export declare function fastly_http_req_send(
  req_handle: RequestHandle,
  body_handle: BodyHandle,
  backend: strptr, // *const u8,
  backend_len: usize,
  resp_handle_out: ptr, // *mut ResponseHandle,
  resp_body_handle_out: ptr // *mut BodyHandle,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "send_async")
export declare function fastly_http_req_send_async(
  req_handle: RequestHandle,
  body_handle: BodyHandle,
  backend: strptr, // *const u8,
  backend_len: usize,
  pending_req_handle_out: ptr // *mut PendingRequestHandle,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "send_async_streaming")
export declare function fastly_http_req_send_async_streaming(
  req_handle: RequestHandle,
  body_handle: BodyHandle,
  backend: strptr, // *const u8,
  backend_len: usize,
  pending_req_handle_out: ptr // *mut PendingRequestHandle,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "uri_get")
export declare function fastly_http_req_uri_get(
  req_handle: RequestHandle,
  uri: strptr, // *mut u8,
  uri_max_len: usize,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "uri_set")
export declare function fastly_http_req_uri_set(
  req_handle: RequestHandle,
  uri: strptr, // *const u8,
  uri_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "version_get")
export declare function fastly_http_req_version_get(
  req_handle: RequestHandle,
  version: ptr // *mut u32
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_req", "version_set")
export declare function fastly_http_req_version_set(
  req_handle: RequestHandle,
  version: u32
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "header_append")
export declare function fastly_http_resp_header_append(
  resp_handle: ResponseHandle,
  name: strptr, // *const u8,
  name_len: usize,
  value: strptr, // *const u8,
  value_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "header_insert")
export declare function fastly_http_resp_header_insert(
  resp_handle: ResponseHandle,
  name: strptr, // *const u8,
  name_len: usize,
  value: strptr, // *const u8,
  value_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "header_names_get")
export declare function fastly_http_resp_header_names_get(
  resp_handle: ResponseHandle,
  buf: strptr, // *mut u8,
  buf_len: usize,
  cursor: u32,
  ending_cursor: ptr, // *mut i64,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "header_value_get")
export declare function fastly_http_resp_header_value_get(
  resp_handle: ResponseHandle,
  name: strptr, // *const u8,
  name_len: usize,
  value: strptr, // *mut u8,
  value_max_len: usize,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "header_values_get")
export declare function fastly_http_resp_header_values_get(
  resp_handle: ResponseHandle,
  name: strptr, // *const u8,
  name_len: usize,
  buf: strptr, // *mut u8,
  buf_len: usize,
  cursor: u32,
  ending_cursor: ptr, // *mut i64,
  nwritten: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "header_values_set")
export declare function fastly_http_resp_header_values_set(
  resp_handle: ResponseHandle,
  name: strptr, // *const u8,
  name_len: usize,
  values: strptr, // *const u8,
  values_len: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "new")
export declare function fastly_http_resp_new(
  resp_handle_out: ptr // *mut ResponseHandle
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "send_downstream")
export declare function fastly_http_resp_send_downstream(
  resp_handle: ResponseHandle,
  body_handle: BodyHandle,
  streaming: u32
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "status_get")
export declare function fastly_http_resp_status_get(
  resp_handle: ResponseHandle,
  status: ptr // *mut u16
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "status_set")
export declare function fastly_http_resp_status_set(
  resp_handle: ResponseHandle,
  status: u16
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "version_get")
export declare function fastly_http_resp_version_get(
  resp_handle: ResponseHandle,
  version: ptr // *mut u32
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_http_resp", "version_set")
export declare function fastly_http_resp_version_set(
  resp_handle: ResponseHandle,
  version: u32
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_uap", "parse")
export declare function fastly_uap_parse(
  user_agent: strptr, // *const u8,
  user_agent_max_len: usize,
  family: strptr, // *mut u8,
  family_max_len: usize,
  family_written: ptr, // *mut usize,
  major: strptr, // *mut u8,
  major_max_len: usize,
  major_written: ptr, // *mut usize,
  minor: strptr, // *mut u8,
  minor_max_len: usize,
  minor_written: ptr, // *mut usize,
  patch: strptr, // *mut u8,
  patch_max_len: usize,
  patch_written: ptr // *mut usize,
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_dictionary", "open")
export declare function fastly_dictionary_open(
  name: strptr, // *const u8,
  name_len: usize,
  dict_handle_out: usize
): FastlyStatus;

// @ts-ignore: decorator
@unsafe
// @ts-ignore: decorator
@external("fastly_dictionary", "get")
export declare function fastly_dictionary_get(
  dict_handle: DictionaryHandle,
  key: strptr, // *const u8,
  key_len: usize,
  value: strptr, // *mut u8,
  value_max_len: usize,
  nwritten: ptr // *mut usize,
): FastlyStatus;
